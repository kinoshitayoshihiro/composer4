name: python-tests

on:
  push:
    branches: [main, 'release/**']
  pull_request:
    branches: [main, 'release/**']

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10', '3.11']
        light: ['1', '0']
    env:
      LIGHT: ${{ matrix.light }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install system libs for soundfile
        if: matrix.light == '0'
        run: sudo apt-get update && sudo apt-get install -y libsndfile1

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 1.7.1

      - name: Cache Poetry
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Cache BasicPitch
        if: matrix.light == '0'
        uses: actions/cache@v3
        with:
          path: ~/.cache/basic_pitch
          key: basicpitch-${{ runner.os }}-${{ hashFiles('utilities/perc_sampler_v1.py') }}
          restore-keys: basicpitch-${{ runner.os }}-

      - name: Cache Torch Models
        uses: actions/cache@v3
        with:
          path: ~/.cache/torch_models
          key: torch-${{ runner.os }}-${{ hashFiles('requirements/extra-ml.txt') }}
          restore-keys: |
            torch-${{ runner.os }}-

      - name: Install deps
        run: |
          extras="--extras test"
          if [ "${{ matrix.light }}" = '0' ]; then
            extras="$extras --extras audio --extras ml"
          fi
          poetry install --no-root $extras

      - name: Verify train-velocity CLI
        run: poetry run train-velocity --help

      - name: Run tests
        run: poetry run pytest --cov=. -q

      - name: Run LoRA CLI smoke tests
        if: matrix.light == '0'
        run: poetry run pytest tests/test_lora_cli_smoke.py -q

      - name: Run transformer integration test
        if: matrix.light == '0'
        run: poetry run pytest tests/test_transformer_integration.py -q

      - name: Run audio-to-MIDI tests
        if: matrix.light == '0'
        run: poetry run pytest tests/audio_to_midi -q

      - name: Run demo
        if: matrix.light == '0'
        run: poetry run make demo
        continue-on-error: true

      - name: Upload demo artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: demo-midis
          path: demos/*.mid
          if-no-files: ignore

      - name: Upload coverage to Codecov
        if: ${{ secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
