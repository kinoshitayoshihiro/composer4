[build-system]
requires = []
build-backend = "build_backend"
backend-path = ["."]

[tool.poetry]
name = "modular-composer"
version = "0.9.0"
description = "OtoKotoba Modular Composer"
authors = ["Harusan <haru@example.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/kinoshitayoshihiro/composer2"
repository = "https://github.com/kinoshitayoshihiro/composer2"
keywords = ["music", "midi", "generation", "plugin"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
audioread = ">=2.1.9"
basic_pitch = { version = ">=0.3", python = "<3.12" }
librosa = ">=0.10"
mido = ">=1.3"
music21 = "^9.1"
numpy = ">=1.24"
pretty_midi = "^0.2"
pydantic = ">=2.7"
pydub = "^0.25"
PyYAML = "^6.0"
soundfile = "^0.12"
fastapi = "^0.95"
uvicorn = "^0.22"
tomli = ">=2.0"
setuptools = "*"
websockets = ">=12.0"
torch = "^2.0"
pytorch-lightning = "^2.3"
scipy = "^1.13"
torchmetrics = "^1.4"

[tool.poetry.extras]
test = [
  "pytest",
  "pytest-cov",
  "mypy",
  "ruff",
  "music21",
  "scikit-learn",
  "scipy",
  "pretty_midi",
  "mido",
  "python-rtmidi",
  "hdbscan",
  "PyYAML",
  "websockets",
]
audio = ["librosa", "soundfile"]
velocity = [
  "numpy",
  "scipy",
]
groove = [
  "pretty_midi",
  "librosa",
]
gui = ["streamlit", "plotly"]
rnn = ["torch", "pytorch_lightning", "optuna"]
live = ["mido", "python-rtmidi"]
ml = ["scikit-learn"]
ai = [
  "transformers",
  "accelerate",
  "sentencepiece",
  "music21",
  "pretty_midi",
  "mido",
  "python-rtmidi",
  "hdbscan",
]
piano_ml = ["transformers", "torch"]
data_ops = ["hmmlearn"]
plugin = [
  "pybind11",
  "cmake",
  "ninja",
]

[tool.hatch.version]
path = "modular_composer/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["modular_composer", "utilities"]

[tool.poetry.scripts]
modcompose = "modular_composer.cli:main"
train-velocity = "scripts.train_velocity:main"
dump-tree = "modular_composer.cli:dump_tree_cmd"
randomize-stem = "modular_composer.cli:randomize_stem"
lyrics-align = "scripts.align_lyrics:main"

[tool.ruff]
target-version = "py310"
select = ["E", "F", "I", "UP"]
fix = true
line-length = 100
extend-exclude = [
  "generator/*",
  "utilities/*",
  "tests/*",
  "data/*",
  "Backup/*",
  "docs/*",
  "config/*",
  "midi_output/*",
  "scripts/*",
  "tools/*",
  "wheelhouse/*",
  "modular_composer.py",
  "emotion_humanizer.py",
  "groove_profile.py",
  "build_all_json.py",
  "run_generate_demo.sh",
  "setup.sh",
  "setup_project.sh",
  "streamlit_app/*",
]

[tool.ruff.lint]
select = ["E", "F", "I", "UP"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
disallow_untyped_defs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["yaml"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["plotly.*", "streamlit.*", "sounddevice.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["tests.*"]
ignore_missing_imports = true
allow_untyped_calls = true

[tool.pytest.ini_options]
markers = [
  "ci_perf: performance gate",
  "stretch: stretch smoke tests",
  "packaging: packaging checks",
  "docs: documentation build",
]
addopts = "--cov=models --cov=realtime"

[tool.coverage.run]
source = ["models", "realtime", "scripts"]
omit = [
  "realtime/rtmidi_streamer.py",
  "realtime/ws_bridge.py",
  "realtime/ws_vocal_bridge.py",
]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'
exclude = '''
/(
        \.git
      | \.venv
      | build
      | dist
      | docs
    )/
'''

[tool.setuptools.packages.find]
include = ["articulation_tagger", "modular_composer*"]

[project]
name = "articulation-tagger"
version = "0.9.0"
description = "BiGRU-CRF articulation tagger for MIDI notes"
authors = [{name = "Your Name", email = "you@example.com"}]
license = {text = "MIT"}
readme = "README.md"
dependencies = [
    "torch>=2.3",
    "torchcrf>=1.1",
    "pretty_midi>=0.2",
    "music21>=8.0",
    "pandas>=2.1",
    "matplotlib>=3.8",
    "pyyaml>=6.0",
    "scikit-learn>=1.5",
]

[project.urls]
Homepage = "https://github.com/OpenAI/modular_composer"
Repository = "https://github.com/OpenAI/modular_composer"

[project.optional-dependencies]
realtime = [
  "fastapi",
  "uvicorn",
  "websockets",
  "streamlit>=1.30",
  "pandas>=2.1",
]
alignment = [
  "torch",
  "pytorch-lightning>=2.3",
  "fastapi>=0.95",
  "uvicorn>=0.22",
  "websockets>=12.0",
  "hydra-core",
  "pretty_midi>=0.2",
  "librosa>=0.10",
  "soundfile>=0.12",
]
